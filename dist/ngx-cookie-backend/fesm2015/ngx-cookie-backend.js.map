{"version":3,"file":"ngx-cookie-backend.js","sources":["../../../projects/ngx-cookie-backend/src/lib/cookie-backend-writer.service.ts","../../../projects/ngx-cookie-backend/src/lib/cookie-backend.module.ts","../../../projects/ngx-cookie-backend/src/public-api.ts","../../../projects/ngx-cookie-backend/src/ngx-cookie-backend.ts"],"sourcesContent":["import { Inject, Injectable, Optional } from '@angular/core';\nimport { REQUEST, RESPONSE } from '@nguniversal/express-engine/tokens';\nimport { CookieOptions as ExpressCookieOptions, Request, Response } from 'express';\nimport { CookieOptions, ICookieWriterService, isEmpty, isNil, isString } from 'ngx-cookie';\n\nconst COOKIE_SEPARATOR = '; ';\n\n@Injectable()\nexport class CookieBackendWriterService implements ICookieWriterService {\n  constructor(@Optional() @Inject(REQUEST) private request: Request,\n              @Optional() @Inject(RESPONSE) private response: Response) {}\n\n  readAllAsString(): string {\n    const requestHeadersCookies = this.request?.headers?.cookie;\n    const cookiesFromRequest: string[] = requestHeadersCookies ? requestHeadersCookies.split(COOKIE_SEPARATOR) : [];\n    const addedCookies: string[] = this.getNormalizedResponseCookies();\n    const allCookies = this.latestUniqueCookieValues(cookiesFromRequest, addedCookies);\n    return allCookies.join(COOKIE_SEPARATOR);\n  }\n\n  private getNormalizedResponseCookies(): string[] {\n    const responseCookies = (this.response.getHeader('Set-Cookie') as string | string[]) ?? '';\n    const addedCookies: string[] = Array.isArray(responseCookies) ? responseCookies : [responseCookies];\n    return addedCookies.map(cookieEntry => cookieEntry.split('; ')[0]);\n  }\n\n  private latestUniqueCookieValues(oldCookies: string[], newerCookies: string[]): string[] {\n    const cookiesMap = new Map<string, string>();\n    const oldAndNewCookies: string[] = [...oldCookies, ...newerCookies];\n    oldAndNewCookies\n      .filter(value => value)\n      .map(cookie => cookie.split('='))\n      .forEach(([key, value]) => cookiesMap.set(key, value));\n    const result: string[] = [];\n    cookiesMap.forEach((value, key) => result.push(`${key}=${value}`));\n    return result;\n  }\n\n  write(name: string, value: string | undefined, options?: CookieOptions): void {\n    if (!isNil(this.response)) {\n      this.response.cookie(name, value, this.getOptions(options));\n    }\n  }\n\n  private getOptions(options?: CookieOptions): ExpressCookieOptions {\n    if (isEmpty(options)) {\n      return {};\n    }\n    return {\n      expires: this.getExpires(options?.expires),\n      httpOnly: options?.httpOnly,\n      path: options?.path,\n      domain: options?.domain,\n      secure: options?.secure,\n      sameSite: options?.sameSite\n    };\n  }\n\n  private getExpires(expires?: string | Date): Date | undefined {\n    if (isEmpty(expires)) {\n      return undefined;\n    }\n    return isString(expires) ? new Date(expires as string) : (expires as Date);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { COOKIE_OPTIONS, COOKIE_WRITER, CookieModule, CookieOptions, CookieOptionsProvider } from 'ngx-cookie';\n\nimport { CookieBackendWriterService } from './cookie-backend-writer.service';\n\n\n@NgModule({\n  imports: [CookieModule],\n  providers: [CookieOptionsProvider]\n})\nexport class CookieBackendModule {\n  /**\n   * Use this method in your root module to provide the CookieService\n   */\n  static forRoot(options: CookieOptions = {}): ModuleWithProviders<CookieModule> {\n    return {\n      ngModule: CookieModule,\n      providers: [\n        {provide: COOKIE_OPTIONS, useValue: options},\n        {provide: COOKIE_WRITER, useClass: CookieBackendWriterService}\n      ]\n    };\n  }\n\n  /**\n   * Use this method in your other (non root) modules to import the directive/pipe\n   */\n  static forChild(options: CookieOptions = {}): ModuleWithProviders<CookieModule> {\n    return CookieBackendModule.forRoot(options);\n  }\n}\n","/*\n * Public API Surface of ngx-cookie-backend\n */\n\nexport * from './lib/cookie-backend-writer.service';\nexport * from './lib/cookie-backend.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}